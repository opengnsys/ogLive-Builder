#/bin/sh

ogConfigureRamfs ()
{
mkdir -p /tmp/og2ndFStmp/
touch /tmp/og2ndFStmp/modules.dep.temp
touch /tmp/og2ndFStmp/modules.dep
}


ogExportKernelParameters ()
{
GLOBAL="cat /proc/cmdline"
for i in `${GLOBAL}`
do
	echo $i | grep "=" > /dev/null && export $i
done
}

ogCheckPointBreak ()
{
# firstshell=0    SH para Arranque en modo depuracion para el cliente intrd
if [ "$firstshell" = "0" ] 
then
    echo "entrando en sh antes de configurar la red"
	sh
fi

	if [ "$firstshell" = "1" ] 
then
    echo "entrando en sh despues de configurar la red"
	sh
fi
# firstrunt=sh   Arranque en modo depuracion para el cliente intrd
if [ "$firstrun" = "9" ] 
then
	sh
fi

}

ogLoadNetModule ()
{
#cargando netmodule
if [ -n "$netmodule" ]
then
   echo "Cargando modulo de red $netmodule"
   insmod `find /lib/modules/ -name ${netmodule}*`
fi
}


ogGetROOTSERVER ()
{
	# get nfs root from dhcp
	if [ "x${NFSROOT}" = "xauto" ]; then
		# check if server ip is part of dhcp root-path
		if [ "${ROOTPATH#*:}" = "${ROOTPATH}" ]; then
			NFSROOT=${ROOTSERVER}:${ROOTPATH}
		else
			NFSROOT=${ROOTPATH}
		fi

	# nfsroot=[<server-ip>:]<root-dir>[,<nfs-options>]
	elif [ -n "${NFSROOT}" ]; then
		# nfs options are an optional arg
		if [ "${NFSROOT#*,}" != "${NFSROOT}" ]; then
			NFSOPTS="-o ${NFSROOT#*,}"
		fi
		NFSROOT=${NFSROOT%%,*}
		if [ "${NFSROOT#*:}" = "$NFSROOT" ]; then
			NFSROOT=${ROOTSERVER}:${NFSROOT}
		fi
	fi
	export ROOTSERVER
}	

ogConectROOTSERVER ()
{
echo Preparando conexi√≥n con el Repositorio  \$ROOTSERVER  \$BOOTMODE \$MOUNTOPTS
		## Montamos el resto de cosas necesarias
		#printf "$MSG_MOUNTREPO\n" $BOOTMODE;
	
		#mount -t nfs -onolock,ro 
		nfsmount -o nolock,ro $ROOTSERVER:/opt/opengnsys/client /opt/opengnsys;
		#mount -t nfs -o nolock 
		nfsmount -o nolock $ROOTSERVER:/opt/opengnsys/log/clients /opt/opengnsys/log;
		#mount -t nfs -o "\$MOUNTOPTS" \$SERVERNFS:/opt/opengnsys/images /opt/opengnsys/images;
		#mount -t tmpfs none /opt/opengnsys/images -o size=5m
}



# Parameter: Where to mount the filesystem
mountroot ()
{
	[ "$quiet" != "y" ] && log_begin_msg "Running OpenGnsys /scripts/og-top"
	run_scripts /scripts/og-top
	[ "$quiet" != "y" ] && log_end_msg

	# If the root device hasn't shown up yet, give it a little while
	# to deal with removable devices


ogConfigureRamfs 
ogExportKernelParameters
ogCheckPointBreak
ogLoadNetModule

	[ "$quiet" != "y" ] && log_begin_msg "Running /scripts/og-premount"
	run_scripts /scripts/og-premount
	[ "$quiet" != "y" ] && log_end_msg

. /scripts/functions
configure_networking
ogGetROOTSERVER
ogCheckPointBreak

ogConectROOTSERVER
# ogConectROOTMEDIA
ogCheckPointBreak	


mkdir -p /opt/og2fs
mount /opt/opengnsys/og2ndFS /opt/og2fs  -o loop -o ro
cp -R /opt/og2fs/etc/* /etc/   # */
mount /opt/og2fs/usr /usr
mount /opt/og2fs/lib /lib
mount /opt/og2fs/bin /bin
mount /opt/og2fs/sbin /sbin
unset PATH
export PATH=/opt/og2fs/sbin
export PATH=/opt/og2fs/bin:$PATH
export PATH=/opt/og2fs/sbin:$PATH
export PATH=$PATH:/opt/og2fs/opt/drbl/sbin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/bin:/sbin
}
mountroot
